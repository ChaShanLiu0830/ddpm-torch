Dataset: cifar10
Effective batch-size is 32 * 1 = 32.
Files already downloaded and verified
Checkpoint will be saved to /home/evan0830/diffusion/ddpm-torch/chkpts/cifar10/cifar10.pt every 10 epoch(s)
Generated images (x32) will be saved to /home/evan0830/diffusion/ddpm-torch/images/train/cifar10 every 10 epoch(s)
cuDNN benchmark: ON
Training starts...












































































1/2040 epochs: 100%|██████████████████████████████████████████████████████████████████████████████| 1562/1562 [02:35<00:00, 10.06it/s, loss=0.248]














2/2040 epochs:  20%|███████████████▏                                                              | 305/1562 [00:29<02:02, 10.26it/s, loss=0.0377]
Traceback (most recent call last):
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 312, in <module>
    main()
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 347, in wrapper
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 308, in main
    train(args=args, wandb= wandb)
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 236, in train
    trainer.train(evaluator, chkpt_path=chkpt_path, image_dir=image_dir)
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/utils/train.py", line 226, in train
    self.step(x.to(self.device), global_steps=global_steps)
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/utils/train.py", line 159, in step
    loss = self.loss(x).mean()
           ^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/utils/train.py", line 147, in loss
    loss = self.diffusion.train_losses(self.model, **self.get_input(x))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/diffusion.py", line 250, in train_losses
    model_out = denoise_fn(x_t, t)
                ^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/models/unet.py", line 218, in forward
    hs.append(layer(h))
              ^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/modules.py", line 166, in forward
    input = module(input, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/modules.py", line 156, in forward
    h_pad, w_pad = s1 * math.ceil(h / s1 - 1) + k1 - h, s2 * math.ceil(w / s2 - 1) + k2 - w
                        ^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt