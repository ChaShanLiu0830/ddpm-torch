Dataset: cifar10
Effective batch-size is 32 * 1 = 32.
Files already downloaded and verified
Checkpoint will be saved to /home/evan0830/diffusion/ddpm-torch/chkpts/cifar10/cifar10.pt every 10 epoch(s)
Generated images (x32) will be saved to /home/evan0830/diffusion/ddpm-torch/images/train/cifar10 every 10 epoch(s)
cuDNN benchmark: ON
Training starts...
1/2040 epochs:   0%|                                                                                                     | 0/1562 [00:00<?, ?it/s]

1/2040 epochs:   0%|▏                                                                                    | 3/1562 [00:03<22:05,  1.18it/s, loss=1]
False
False
False
False
False
False
False
False
False
False
False
False
False
False
False
1/2040 epochs:   1%|▊                                                                                   | 16/1562 [00:04<07:38,  3.37it/s, loss=1]
Traceback (most recent call last):
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 312, in <module>
    main()
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 347, in wrapper
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 308, in main
    train(args=args, wandb= wandb)
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 236, in train
    trainer.train(evaluator, chkpt_path=chkpt_path, image_dir=image_dir)
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/utils/train.py", line 227, in train
    self.step(x.to(self.device), global_steps=global_steps)
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/utils/train.py", line 185, in step
    self.stats.update(x.shape[0], loss=loss.item() * x.shape[0])
                                       ^^^^^^^^^^^
KeyboardInterrupt