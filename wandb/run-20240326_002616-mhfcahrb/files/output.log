Dataset: cifar10
Effective batch-size is 32 * 1 = 32.
Files already downloaded and verified
Checkpoint will be saved to /home/evan0830/diffusion/ddpm-torch/chkpts/cifar10/cifar10.pt every 10 epoch(s)
Generated images (x32) will be saved to /home/evan0830/diffusion/ddpm-torch/images/train/cifar10 every 10 epoch(s)
cuDNN benchmark: ON
Training starts...













1/2040 epochs:  11%|███████                                                        | 176/1562 [00:33<04:22,  5.29it/s, loss=0.957]
Traceback (most recent call last):
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 313, in <module>
    main()
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 347, in wrapper
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 309, in main
    train(args=args, wandb= wandb)
  File "/home/evan0830/diffusion/ddpm-torch/train.py", line 237, in train
    trainer.train(evaluator, chkpt_path=chkpt_path, image_dir=image_dir)
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/utils/train.py", line 226, in train
    self.step(x.to(self.device), global_steps=global_steps)
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/utils/train.py", line 159, in step
    loss = self.loss(x).mean()
           ^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/utils/train.py", line 147, in loss
    loss = self.diffusion.train_losses(self.model, **self.get_input(x))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/diffusion.py", line 250, in train_losses
    model_out = denoise_fn(x_t, t)
                ^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/models/unet.py", line 216, in forward
    hs.append(layer(h, t_emb=t_emb))
              ^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/modules.py", line 166, in forward
    input = module(input, **kwargs)
            ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/models/unet.py", line 57, in forward
    q, k, v = self.project_in(self.norm(x)).chunk(3, dim=1)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/miniconda3/envs/diffusion/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/evan0830/diffusion/ddpm-torch/ddpm_torch/modules.py", line 121, in forward
    return F.conv2d(
           ^^^^^^^^^
KeyboardInterrupt